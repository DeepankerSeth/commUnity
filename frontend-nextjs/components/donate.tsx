/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/x8KXAP1zrOj
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { IBM_Plex_Sans } from 'next/font/google'
import { Rubik } from 'next/font/google'

ibm_plex_sans({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useMemo } from "react"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Checkbox } from "@/components/ui/checkbox"
import { Slider } from "@/components/ui/slider"
import { Card } from "@/components/ui/card"

export function donate() {
  const [filters, setFilters] = useState({
    cause: [],
    location: [],
    minImpact: 0,
    maxDonation: Infinity,
  })
  const charities = useMemo(() => {
    return [
      {
        id: 1,
        name: "Charity for Clean Water",
        cause: ["Water", "Health"],
        location: ["Africa", "Asia"],
        impact: 4.8,
        donationAmount: 50,
      },
      {
        id: 2,
        name: "Meals for the Hungry",
        cause: ["Food", "Poverty"],
        location: ["North America", "South America"],
        impact: 4.6,
        donationAmount: 35,
      },
      {
        id: 3,
        name: "Reforestation Initiative",
        cause: ["Environment", "Climate"],
        location: ["Global"],
        impact: 4.9,
        donationAmount: 75,
      },
      {
        id: 4,
        name: "Disaster Relief Fund",
        cause: ["Disaster", "Emergency"],
        location: ["Global"],
        impact: 4.7,
        donationAmount: 60,
      },
      {
        id: 5,
        name: "Education for All",
        cause: ["Education", "Youth"],
        location: ["Africa", "Asia"],
        impact: 4.8,
        donationAmount: 45,
      },
    ].filter((charity) => {
      const { cause, location, minImpact, maxDonation } = filters
      return (
        (cause.length === 0 || charity.cause.some((c) => cause.includes(c))) &&
        (location.length === 0 || charity.location.some((l) => location.includes(l))) &&
        charity.impact >= minImpact &&
        charity.donationAmount <= maxDonation
      )
    })
  }, [filters])
  const handleFilterChange = (type, value) => {
    setFilters((prevFilters) => ({
      ...prevFilters,
      [type]: prevFilters[type].includes(value)
        ? prevFilters[type].filter((item) => item !== value)
        : [...prevFilters[type], value],
    }))
  }
  const handleImpactChange = (value) => {
    setFilters((prevFilters) => ({
      ...prevFilters,
      minImpact: value,
    }))
  }
  const handleDonationChange = (value) => {
    setFilters((prevFilters) => ({
      ...prevFilters,
      maxDonation: value,
    }))
  }
  const sortedCharities = useMemo(() => {
    return [...charities].sort((a, b) => b.impact - a.impact)
  }, [charities])
  return (
    <div className="bg-background text-foreground">
      <header className="bg-primary text-primary-foreground py-4 px-6">
        <div className="flex items-center justify-between">
          <h1 className="text-3xl font-bold">Donate</h1>
        </div>
      </header>
      <main className="container mx-auto py-12 px-4 md:px-6">
        <div className="grid grid-cols-1 md:grid-cols-[1fr_2fr] gap-8">
          <div className="bg-card p-6 rounded-lg shadow-md">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-xl font-bold">Filters</h2>
              <Button variant="outline" className="ml-auto shrink-0">
                Add/Change Preferences
              </Button>
            </div>
            <div className="space-y-4">
              <div>
                <h3 className="text-lg font-medium mb-2">Cause</h3>
                <div className="grid grid-cols-2 gap-2">
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Water")}
                      onCheckedChange={() => handleFilterChange("cause", "Water")}
                    />
                    Water
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Health")}
                      onCheckedChange={() => handleFilterChange("cause", "Health")}
                    />
                    Health
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Food")}
                      onCheckedChange={() => handleFilterChange("cause", "Food")}
                    />
                    Food
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Poverty")}
                      onCheckedChange={() => handleFilterChange("cause", "Poverty")}
                    />
                    Poverty
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Environment")}
                      onCheckedChange={() => handleFilterChange("cause", "Environment")}
                    />
                    Environment
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Climate")}
                      onCheckedChange={() => handleFilterChange("cause", "Climate")}
                    />
                    Climate
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Disaster")}
                      onCheckedChange={() => handleFilterChange("cause", "Disaster")}
                    />
                    Disaster
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Emergency")}
                      onCheckedChange={() => handleFilterChange("cause", "Emergency")}
                    />
                    Emergency
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Education")}
                      onCheckedChange={() => handleFilterChange("cause", "Education")}
                    />
                    Education
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.cause.includes("Youth")}
                      onCheckedChange={() => handleFilterChange("cause", "Youth")}
                    />
                    Youth
                  </Label>
                </div>
              </div>
              <div>
                <h3 className="text-lg font-medium mb-2">Location</h3>
                <div className="grid grid-cols-2 gap-2">
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.location.includes("Africa")}
                      onCheckedChange={() => handleFilterChange("location", "Africa")}
                    />
                    Africa
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.location.includes("Asia")}
                      onCheckedChange={() => handleFilterChange("location", "Asia")}
                    />
                    Asia
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.location.includes("North America")}
                      onCheckedChange={() => handleFilterChange("location", "North America")}
                    />
                    North America
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.location.includes("South America")}
                      onCheckedChange={() => handleFilterChange("location", "South America")}
                    />
                    South America
                  </Label>
                  <Label className="flex items-center gap-2 font-normal">
                    <Checkbox
                      checked={filters.location.includes("Global")}
                      onCheckedChange={() => handleFilterChange("location", "Global")}
                    />
                    Global
                  </Label>
                </div>
              </div>
              <div>
                <h3 className="text-lg font-medium mb-2">Impact</h3>
                <Slider
                  value={[filters.minImpact]}
                  onValueChange={handleImpactChange}
                  min={0}
                  max={5}
                  step={0.1}
                  className="w-full"
                />
                <div className="flex justify-between text-sm">
                  <span>0</span>
                  <span>5</span>
                </div>
              </div>
              <div>
                <h3 className="text-lg font-medium mb-2">Donation Amount</h3>
                <Slider
                  value={[filters.maxDonation]}
                  onValueChange={handleDonationChange}
                  min={0}
                  max={100}
                  step={5}
                  className="w-full"
                />
                <div className="flex justify-between text-sm">
                  <span>$0</span>
                  <span>$100</span>
                </div>
              </div>
            </div>
          </div>
          <div>
            <h2 className="text-xl font-bold mb-4">Recommended Charities</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {sortedCharities.map((charity) => (
                <Card key={charity.id} className="bg-card p-6 rounded-lg shadow-md">
                  <h3 className="text-lg font-bold mb-2">{charity.name}</h3>
                  <div className="flex items-center mb-2">
                    <StarIcon className="w-4 h-4 text-yellow-500 mr-1" />
                    <span className="font-medium">{charity.impact.toFixed(1)}</span>
                  </div>
                  <div className="mb-4">
                    {charity.cause.map((c, i) => (
                      <span
                        key={i}
                        className="inline-block bg-primary/10 text-primary rounded-full px-3 py-1 text-xs mr-2 mb-2"
                      >
                        {c}
                      </span>
                    ))}
                  </div>
                  <div className="flex justify-between items-center">
                    <div className="text-muted-foreground">{charity.location.join(", ")}</div>
                    <Button size="sm" className="bg-primary text-primary-foreground hover:bg-primary/90">
                      Donate ${charity.donationAmount}
                    </Button>
                  </div>
                </Card>
              ))}
            </div>
          </div>
        </div>
        <section className="mt-12">
          <h2 className="text-xl font-bold mb-4">Why Donate?</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <div className="bg-card p-6 rounded-lg shadow-md">
              <GiftIcon className="w-12 h-12 text-primary mb-4" />
              <h3 className="text-lg font-bold mb-2">Maximum Impact</h3>
              <p className="text-muted-foreground">
                Our recommendations are carefully curated to ensure your donations have the greatest possible impact.
              </p>
            </div>
            <div className="bg-card p-6 rounded-lg shadow-md">
              <BadgeCheckIcon className="w-12 h-12 text-primary mb-4" />
              <h3 className="text-lg font-bold mb-2">Trusted Charities</h3>
              <p className="text-muted-foreground">
                We thoroughly vet all the charities we recommend to ensure they are reputable and transparent.
              </p>
            </div>
            <div className="bg-card p-6 rounded-lg shadow-md">
              <TestTubeIcon className="w-12 h-12 text-primary mb-4" />
              <h3 className="text-lg font-bold mb-2">Inspiring Testimonials</h3>
              <p className="text-muted-foreground">
                Read heartwarming stories from people whose lives have been transformed by the charities we recommend.
              </p>
            </div>
          </div>
        </section>
      </main>
      <footer className="bg-primary text-primary-foreground py-4 px" />
    </div>
  )
}

function BadgeCheckIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
      <path d="m9 12 2 2 4-4" />
    </svg>
  )
}


function GiftIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect x="3" y="8" width="18" height="4" rx="1" />
      <path d="M12 8v13" />
      <path d="M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7" />
      <path d="M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5 2.5 2.5 0 0 1 0 5" />
    </svg>
  )
}


function StarIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>
  )
}


function TestTubeIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5h0c-1.4 0-2.5-1.1-2.5-2.5V2" />
      <path d="M8.5 2h7" />
      <path d="M14.5 16h-5" />
    </svg>
  )
}
