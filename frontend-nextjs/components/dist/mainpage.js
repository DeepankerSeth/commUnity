"use strict";
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/0cA75ElyQH0
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.mainpage = void 0;
/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
var link_1 = require("next/link");
var textarea_1 = require("@/components/ui/textarea");
var button_1 = require("@/components/ui/button");
var card_1 = require("@/components/ui/card");
function mainpage() {
    return (React.createElement("div", { className: "flex flex-col h-screen" },
        React.createElement("header", { className: "bg-[#1e293b] text-white py-2 px-6 flex items-center justify-between" },
            React.createElement("div", { className: "flex items-center gap-6" },
                React.createElement("h1", { className: "text-xl font-bold" }, "commUnity"),
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline flex items-center gap-2", prefetch: false },
                    React.createElement(MapIcon, { className: "mr-2 align-middle h-5 w-5" }),
                    "Location")),
            React.createElement("div", { className: "flex items-center gap-1 rounded-full bg-white px-2 py-1 shadow-sm" },
                React.createElement(SearchIcon, { className: "h-5 w-5 text-gray-500" }),
                React.createElement(textarea_1.Textarea, { placeholder: "ask me anything", className: "flex-1 border-none bg-transparent p-0 text-gray-700 focus:outline-none" }),
                React.createElement(button_1.Button, { variant: "ghost", size: "icon", className: "text-gray-500 hover:bg-gray-200 hover:text-gray-700" },
                    React.createElement(MicIcon, { className: "h-5 w-5" }),
                    React.createElement("span", { className: "sr-only" }, "Voice"))),
            React.createElement("nav", { className: "hidden md:flex items-center gap-4" },
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Disaster Prediction"),
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Evacuation"),
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Early Warning"),
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Resource Management"),
                React.createElement(link_1["default"], { href: "#", className: "bg-white text-[#1e293b] hover:bg-[#1e293b] hover:text-white px-4 py-2 rounded-md font-medium transition-colors", prefetch: false }, "Donate to a Cause"))),
        React.createElement("main", { className: "flex-1 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-6" },
            React.createElement(card_1.Card, { className: "bg-[#1e293b] text-white" },
                React.createElement(card_1.CardHeader, null,
                    React.createElement(card_1.CardTitle, null, "Disaster Prediction"),
                    React.createElement(card_1.CardDescription, null, "Real-time alerts and forecasts for natural disasters.")),
                React.createElement(card_1.CardContent, { className: "grid gap-4" },
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(TriangleAlertIcon, { className: "h-6 w-6 text-[#e74c3c]" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Hurricane Warning"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Category 3 hurricane expected to make landfall in 24 hours."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(EarthIcon, { className: "h-6 w-6 text-[#f39c12]" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Earthquake Alert"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Magnitude 6.2 earthquake detected, epicenter 50 miles away."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(CloudRainIcon, { className: "h-6 w-6 text-[#3498db]" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Flood Warning"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Heavy rainfall expected, potential for flash flooding."))),
                    React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "View Historical Data"))),
            React.createElement(card_1.Card, { className: "bg-[#1e293b] text-white" },
                React.createElement(card_1.CardHeader, null,
                    React.createElement(card_1.CardTitle, null, "Evacuation"),
                    React.createElement(card_1.CardDescription, null, "Guidance and instructions for safe evacuation in the event of a disaster.")),
                React.createElement(card_1.CardContent, { className: "grid gap-4" },
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(MapIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Evacuation Routes"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "View recommended evacuation routes for your area."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(HomeIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Shelters"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Find the nearest emergency shelters and their capacity."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(BusIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Transportation"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "View available transportation options for evacuation."))),
                    React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Evacuation Checklist"))),
            React.createElement(card_1.Card, { className: "bg-[#1e293b] text-white" },
                React.createElement(card_1.CardHeader, null,
                    React.createElement(card_1.CardTitle, null, "Early Warning"),
                    React.createElement(card_1.CardDescription, null, "Subtle alerts for impending disasters, allowing you to prepare in advance.")),
                React.createElement(card_1.CardContent, { className: "grid gap-4" },
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(RadarIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Seismic Activity"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Increased seismic activity detected in your region."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(CloudIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Weather Patterns"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Unusual weather patterns observed, potential for severe storms."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(FlameIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Wildfire Risk"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Increased risk of wildfires due to dry conditions."))),
                    React.createElement("div", { className: "flex items-center gap-2" },
                        React.createElement(GlassWaterIcon, { className: "h-6 w-6 text-white" }),
                        React.createElement("div", null,
                            React.createElement("p", { className: "font-medium" }, "Flood Potential"),
                            React.createElement("p", { className: "text-sm text-gray-300" }, "Heavy rainfall expected, potential for flooding.")))))),
        React.createElement("footer", { className: "bg-[#1e293b] text-white py-4 px-6 flex justify-between items-center" },
            React.createElement("div", { className: "text-sm" }, "\u00A9 2024 commUnity. All rights reserved."),
            React.createElement("div", { className: "flex items-center gap-4" },
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Privacy Policy"),
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Terms of Service"),
                React.createElement(link_1["default"], { href: "#", className: "text-white hover:underline", prefetch: false }, "Contact Us")))));
}
exports.mainpage = mainpage;
function BusIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M8 6v6" }),
        React.createElement("path", { d: "M15 6v6" }),
        React.createElement("path", { d: "M2 12h19.6" }),
        React.createElement("path", { d: "M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3" }),
        React.createElement("circle", { cx: "7", cy: "18", r: "2" }),
        React.createElement("path", { d: "M9 18h5" }),
        React.createElement("circle", { cx: "16", cy: "18", r: "2" })));
}
function CloudIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z" })));
}
function CloudRainIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" }),
        React.createElement("path", { d: "M16 14v6" }),
        React.createElement("path", { d: "M8 14v6" }),
        React.createElement("path", { d: "M12 16v6" })));
}
function EarthIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M21.54 15H17a2 2 0 0 0-2 2v4.54" }),
        React.createElement("path", { d: "M7 3.34V5a3 3 0 0 0 3 3v0a2 2 0 0 1 2 2v0c0 1.1.9 2 2 2v0a2 2 0 0 0 2-2v0c0-1.1.9-2 2-2h3.17" }),
        React.createElement("path", { d: "M11 21.95V18a2 2 0 0 0-2-2v0a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05" }),
        React.createElement("circle", { cx: "12", cy: "12", r: "10" })));
}
function FlameIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z" })));
}
function GlassWaterIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M15.2 22H8.8a2 2 0 0 1-2-1.79L5 3h14l-1.81 17.21A2 2 0 0 1 15.2 22Z" }),
        React.createElement("path", { d: "M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0" })));
}
function HomeIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" }),
        React.createElement("polyline", { points: "9 22 9 12 15 12 15 22" })));
}
function MapIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z" }),
        React.createElement("path", { d: "M15 5.764v15" }),
        React.createElement("path", { d: "M9 3.236v15" })));
}
function MicIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z" }),
        React.createElement("path", { d: "M19 10v2a7 7 0 0 1-14 0v-2" }),
        React.createElement("line", { x1: "12", x2: "12", y1: "19", y2: "22" })));
}
function RadarIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "M19.07 4.93A10 10 0 0 0 6.99 3.34" }),
        React.createElement("path", { d: "M4 6h.01" }),
        React.createElement("path", { d: "M2.29 9.62A10 10 0 1 0 21.31 8.35" }),
        React.createElement("path", { d: "M16.24 7.76A6 6 0 1 0 8.23 16.67" }),
        React.createElement("path", { d: "M12 18h.01" }),
        React.createElement("path", { d: "M17.99 11.66A6 6 0 0 1 15.77 16.67" }),
        React.createElement("circle", { cx: "12", cy: "12", r: "2" }),
        React.createElement("path", { d: "m13.41 10.59 5.66-5.66" })));
}
function SearchIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("circle", { cx: "11", cy: "11", r: "8" }),
        React.createElement("path", { d: "m21 21-4.3-4.3" })));
}
function TriangleAlertIcon(props) {
    return (React.createElement("svg", __assign({}, props, { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round" }),
        React.createElement("path", { d: "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3" }),
        React.createElement("path", { d: "M12 9v4" }),
        React.createElement("path", { d: "M12 17h.01" })));
}
